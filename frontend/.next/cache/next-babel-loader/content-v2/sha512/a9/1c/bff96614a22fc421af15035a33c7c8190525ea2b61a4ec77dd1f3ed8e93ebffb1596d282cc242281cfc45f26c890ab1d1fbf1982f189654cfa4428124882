{"ast":null,"code":"var _jsxFileName = \"/home/node/app/pages/[page].tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/Layout\";\nimport { initializeApollo, addApolloState } from \"../lib/apolloClient\";\nimport { gql } from \"@apollo/client\";\nimport MediaCard from \"../components/Card\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\nimport { useRouter } from \"next/router\";\nexport const ITEMS_PER_PAGE = 6;\nexport const NUM_OF_NAV_PAGES = 3;\nexport const POSTS_QUERY = gql`\n  query postsQuery($first: Int, $last: Int, $after: String, $before: String) {\n    posts(first: $first, last: $last, after: $after, before: $before) {\n      edges {\n        node {\n          date\n          featuredImage {\n            title\n            sourceUrl\n          }\n          title\n          author {\n            id\n          }\n          id\n          slug\n          excerpt\n        }\n      }\n    }\n  }\n`;\nexport const CURSORS_QUERY = gql`\n  query IDQuery {\n    posts {\n      edges {\n        cursor\n      }\n    }\n  }\n`;\n\nconst IndexPage = ({\n  posts,\n  errors,\n  numOfPages\n}) => {\n  const router = useRouter();\n  const pageNumber = parseInt(router.query.page.toString());\n  let navigablePages = [];\n  let start = NUM_OF_NAV_PAGES * (Math.ceil(pageNumber / NUM_OF_NAV_PAGES) - 1) + 1;\n  let end = Math.min(NUM_OF_NAV_PAGES * Math.ceil(pageNumber / NUM_OF_NAV_PAGES), numOfPages - 1);\n\n  if (start !== 1) {\n    navigablePages.push(__jsx(IconButton, {\n      onClick: () => {\n        router.push(`/${start - 1}`);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    }, \"...\"));\n  }\n\n  for (let i = start; i <= end; i++) {\n    if (i === 1) {\n      navigablePages.push(__jsx(IconButton, {\n        onClick: () => {\n          router.push(`/`);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }\n      }, \"1\"));\n    } else if (pageNumber === i) {\n      navigablePages.push(__jsx(IconButton, {\n        disabled: true,\n        onClick: () => {\n          router.push(`/${i}`);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }\n      }, i));\n    } else {\n      navigablePages.push(__jsx(IconButton, {\n        onClick: () => {\n          router.push(`/${i}`);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 9\n        }\n      }, i));\n    }\n  }\n\n  if (end < numOfPages - 1) {\n    navigablePages.push(__jsx(IconButton, {\n      onClick: () => {\n        router.push(`/${end + 1}`);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 7\n      }\n    }, \"...\"));\n  }\n\n  if (errors) {\n    return __jsx(Layout, {\n      title: \"Error | Next.js + TypeScript Example\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 7\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }\n    }, __jsx(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }\n    }, \"Error:\"), \" \", errors));\n  }\n\n  return __jsx(Layout, {\n    title: \"Home | Next.js + TypeScript Example\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"flex flex-col items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }, posts.map((post, index) => {\n    return __jsx(\"div\", {\n      className: \"m-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    }, __jsx(MediaCard, {\n      key: index,\n      title: post.title,\n      description: post.excerpt || \"\",\n      imgTitle: post.title,\n      imgURL: post.featuredImage ? post.featuredImage.sourceUrl : \"image_not_found.png\",\n      cardWidth: 345,\n      imgHeight: 140,\n      link: `posts/${post.slug}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 15\n      }\n    }));\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  }, __jsx(IconButton, {\n    onClick: () => {\n      router.push(pageNumber === 2 ? \"/\" : `/${pageNumber - 1}`);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  }, __jsx(NavigateBeforeIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  })), navigablePages, pageNumber !== numOfPages - 1 ? __jsx(IconButton, {\n    onClick: () => {\n      router.push(`/${pageNumber + 1}`);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }, __jsx(NavigateNextIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 15\n    }\n  })) : null)));\n};\n\nexport default IndexPage;\nexport const getStaticPaths = async () => {\n  const apolloClient = initializeApollo();\n  const {\n    data\n  } = await apolloClient.query({\n    query: CURSORS_QUERY,\n    context: {\n      clientName: \"wordPress\"\n    }\n  });\n  let paths = [];\n  const numOfPages = Math.ceil(data.posts.edges.length / ITEMS_PER_PAGE);\n\n  for (let i = 2; i <= numOfPages; i++) {\n    paths.push({\n      params: {\n        page: i.toString()\n      }\n    });\n  }\n\n  return {\n    paths,\n    fallback: false\n  };\n};\nexport const getStaticProps = async ({\n  params\n}) => {\n  try {\n    const page = parseInt(params === null || params === void 0 ? void 0 : params.page);\n    const apolloClient = initializeApollo();\n    const cursors = await apolloClient.query({\n      query: CURSORS_QUERY,\n      context: {\n        clientName: \"wordPress\"\n      }\n    }).then(res => [res.data.posts.edges[0], ...res.data.posts.edges.filter((_, index) => (index + 1) % ITEMS_PER_PAGE === 0)]);\n    const {\n      data\n    } = await apolloClient.query({\n      query: POSTS_QUERY,\n      variables: {\n        first: ITEMS_PER_PAGE,\n        last: null,\n        after: cursors[page - 1].cursor,\n        before: null\n      },\n      context: {\n        clientName: \"wordPress\"\n      }\n    });\n    return addApolloState(apolloClient, {\n      props: {\n        posts: data.posts.edges.map(edge => edge.node),\n        numOfPages: cursors.length\n      }\n    });\n  } catch (err) {\n    return {\n      props: {\n        errors: err.message\n      }\n    };\n  }\n};","map":{"version":3,"sources":["/home/node/app/pages/[page].tsx"],"names":["Layout","initializeApollo","addApolloState","gql","MediaCard","IconButton","NavigateBeforeIcon","NavigateNextIcon","useRouter","ITEMS_PER_PAGE","NUM_OF_NAV_PAGES","POSTS_QUERY","CURSORS_QUERY","IndexPage","posts","errors","numOfPages","router","pageNumber","parseInt","query","page","toString","navigablePages","start","Math","ceil","end","min","push","i","color","map","post","index","title","excerpt","featuredImage","sourceUrl","slug","getStaticPaths","apolloClient","data","context","clientName","paths","edges","length","params","fallback","getStaticProps","cursors","then","res","filter","_","variables","first","last","after","cursor","before","props","edge","node","err","message"],"mappings":"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","sourcesContent":["import Layout from \"../components/Layout\";\nimport { initializeApollo, addApolloState } from \"../lib/apolloClient\";\nimport { gql } from \"@apollo/client\";\nimport MediaCard from \"../components/Card\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\nimport { GetStaticPaths, GetStaticProps } from \"next\";\nimport { useRouter } from \"next/router\";\n\nexport const ITEMS_PER_PAGE = 6;\n\nexport const NUM_OF_NAV_PAGES = 3;\n\nexport const POSTS_QUERY = gql`\n  query postsQuery($first: Int, $last: Int, $after: String, $before: String) {\n    posts(first: $first, last: $last, after: $after, before: $before) {\n      edges {\n        node {\n          date\n          featuredImage {\n            title\n            sourceUrl\n          }\n          title\n          author {\n            id\n          }\n          id\n          slug\n          excerpt\n        }\n      }\n    }\n  }\n`;\n\nexport type Post = {\n  date: string;\n  featuredImage: {\n    title: string;\n    sourceUrl: string;\n  };\n  title: string;\n  author: {\n    id: string;\n  };\n  id: string;\n  slug: string;\n  excerpt: string;\n};\n\ntype Props = {\n  posts?: Post[];\n  errors?: string;\n  numOfPages: number;\n};\n\nexport const CURSORS_QUERY = gql`\n  query IDQuery {\n    posts {\n      edges {\n        cursor\n      }\n    }\n  }\n`;\n\nconst IndexPage = ({ posts, errors, numOfPages }: Props) => {\n  const router = useRouter();\n  const pageNumber = parseInt(router.query.page.toString());\n\n  let navigablePages = [];\n  let start =\n    NUM_OF_NAV_PAGES * (Math.ceil(pageNumber / NUM_OF_NAV_PAGES) - 1) + 1;\n  let end = Math.min(\n    NUM_OF_NAV_PAGES * Math.ceil(pageNumber / NUM_OF_NAV_PAGES),\n    numOfPages - 1\n  );\n\n  if (start !== 1) {\n    navigablePages.push(\n      <IconButton\n        onClick={() => {\n          router.push(`/${start - 1}`);\n        }}\n      >\n        {\"...\"}\n      </IconButton>\n    );\n  }\n\n  for (let i = start; i <= end; i++) {\n    if (i === 1) {\n      navigablePages.push(\n        <IconButton\n          onClick={() => {\n            router.push(`/`);\n          }}\n        >\n          1\n        </IconButton>\n      );\n    } else if (pageNumber === i) {\n      navigablePages.push(\n        <IconButton\n          disabled\n          onClick={() => {\n            router.push(`/${i}`);\n          }}\n        >\n          {i}\n        </IconButton>\n      );\n    } else {\n      navigablePages.push(\n        <IconButton\n          onClick={() => {\n            router.push(`/${i}`);\n          }}\n        >\n          {i}\n        </IconButton>\n      );\n    }\n  }\n\n  if (end < numOfPages - 1) {\n    navigablePages.push(\n      <IconButton\n        onClick={() => {\n          router.push(`/${end + 1}`);\n        }}\n      >\n        {\"...\"}\n      </IconButton>\n    );\n  }\n\n  if (errors) {\n    return (\n      <Layout title=\"Error | Next.js + TypeScript Example\">\n        <p>\n          <span style={{ color: \"red\" }}>Error:</span> {errors}\n        </p>\n      </Layout>\n    );\n  }\n  return (\n    <Layout title=\"Home | Next.js + TypeScript Example\">\n      <div className=\"flex flex-col items-center\">\n        {posts!.map((post: Post, index: number) => {\n          return (\n            <div className=\"m-4\">\n              <MediaCard\n                key={index}\n                title={post.title}\n                description={post.excerpt || \"\"}\n                imgTitle={post.title}\n                imgURL={\n                  post.featuredImage\n                    ? post.featuredImage.sourceUrl\n                    : \"image_not_found.png\"\n                }\n                cardWidth={345}\n                imgHeight={140}\n                link={`posts/${post.slug}`}\n              />\n            </div>\n          );\n        })}\n        <div>\n          <IconButton\n            onClick={() => {\n              router.push(pageNumber === 2 ? \"/\" : `/${pageNumber - 1}`);\n            }}\n          >\n            <NavigateBeforeIcon />\n          </IconButton>\n          {navigablePages}\n          {pageNumber !== numOfPages - 1 ? (\n            <IconButton\n              onClick={() => {\n                router.push(`/${pageNumber + 1}`);\n              }}\n            >\n              <NavigateNextIcon />\n            </IconButton>\n          ) : null}\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n\nexport const getStaticPaths: GetStaticPaths = async () => {\n  const apolloClient = initializeApollo();\n\n  const { data } = await apolloClient.query({\n    query: CURSORS_QUERY,\n    context: { clientName: \"wordPress\" },\n  });\n  let paths = [];\n  const numOfPages = Math.ceil(data.posts.edges.length / ITEMS_PER_PAGE);\n  for (let i = 2; i <= numOfPages; i++) {\n    paths.push({ params: { page: i.toString() } });\n  }\n\n  return { paths, fallback: false };\n};\n\nexport const getStaticProps: GetStaticProps = async ({ params }) => {\n  try {\n    const page = parseInt(params?.page! as string);\n    const apolloClient = initializeApollo();\n\n    const cursors = await apolloClient\n      .query({\n        query: CURSORS_QUERY,\n        context: { clientName: \"wordPress\" },\n      })\n      .then((res) => [\n        res.data.posts.edges[0],\n        ...res.data.posts.edges.filter(\n          (_: string, index: number) => (index + 1) % ITEMS_PER_PAGE === 0\n        ),\n      ]);\n\n    const { data } = await apolloClient.query({\n      query: POSTS_QUERY,\n      variables: {\n        first: ITEMS_PER_PAGE,\n        last: null,\n        after: cursors[page - 1].cursor,\n        before: null,\n      },\n      context: { clientName: \"wordPress\" },\n    });\n\n    return addApolloState(apolloClient, {\n      props: {\n        posts: data.posts.edges.map((edge: { node: Post }) => edge.node),\n        numOfPages: cursors.length,\n      },\n    });\n  } catch (err) {\n    return { props: { errors: err.message } };\n  }\n};\n"]},"metadata":{},"sourceType":"module"}