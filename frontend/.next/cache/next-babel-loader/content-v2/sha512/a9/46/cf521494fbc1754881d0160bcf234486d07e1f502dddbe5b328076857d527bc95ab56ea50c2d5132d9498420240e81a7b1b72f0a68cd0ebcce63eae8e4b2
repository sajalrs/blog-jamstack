{"ast":null,"code":"var _jsxFileName = \"/home/sajalrs/WebDevelopment/blog-jamstack/frontend/components/Card/index.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useRouter } from \"next/router\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\n\nconst MediaCard = ({\n  title,\n  description,\n  imgTitle,\n  imgURL,\n  cardWidth,\n  imgHeight,\n  link\n}) => {\n  const useStyles = makeStyles(theme => createStyles({\n    root: {\n      maxWidth: cardWidth\n    },\n    media: {\n      height: imgHeight,\n      display: \"none\",\n      img: {\n        height: \"100%\",\n        width: \"100%\",\n        objectFit: \"cover\"\n      }\n    },\n    description: _objectSpread(_objectSpread({}, theme.typography.body2), {}, {\n      color: theme.palette.text.secondary\n    })\n  }));\n  const classes = useStyles();\n  const router = useRouter();\n  return __jsx(Card, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, __jsx(CardActionArea, {\n    onClick: () => {\n      router.push(link);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, __jsx(CardMedia, {\n    className: classes.media,\n    image: imgURL,\n    title: imgTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }), __jsx(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    gutterBottom: true,\n    variant: \"h5\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, title), __jsx(\"div\", {\n    className: `${classes.description} prose`,\n    dangerouslySetInnerHTML: {\n      __html: description\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }))), __jsx(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    size: \"small\",\n    color: \"primary\",\n    onClick: () => {\n      router.push(link);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \"Learn More\")));\n};\n\nexport default MediaCard;","map":{"version":3,"sources":["/home/sajalrs/WebDevelopment/blog-jamstack/frontend/components/Card/index.tsx"],"names":["React","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","Typography","useRouter","makeStyles","createStyles","MediaCard","title","description","imgTitle","imgURL","cardWidth","imgHeight","link","useStyles","theme","root","maxWidth","media","height","display","img","width","objectFit","typography","body2","color","palette","text","secondary","classes","router","push","__html"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,UAAT,EAA4BC,YAA5B,QAAgD,0BAAhD;;AAYA,MAAMC,SAAS,GAAG,CAAC;AACjBC,EAAAA,KADiB;AAEjBC,EAAAA,WAFiB;AAGjBC,EAAAA,QAHiB;AAIjBC,EAAAA,MAJiB;AAKjBC,EAAAA,SALiB;AAMjBC,EAAAA,SANiB;AAOjBC,EAAAA;AAPiB,CAAD,KAQL;AACX,QAAMC,SAAS,GAAGV,UAAU,CAAEW,KAAD,IAC3BV,YAAY,CAAC;AACXW,IAAAA,IAAI,EAAE;AACJC,MAAAA,QAAQ,EAAEN;AADN,KADK;AAIXO,IAAAA,KAAK,EAAE;AACLC,MAAAA,MAAM,EAAEP,SADH;AAELQ,MAAAA,OAAO,EAAE,MAFJ;AAGLC,MAAAA,GAAG,EAAE;AAEHF,QAAAA,MAAM,EAAE,MAFL;AAGHG,QAAAA,KAAK,EAAE,MAHJ;AAIHC,QAAAA,SAAS,EAAE;AAJR;AAHA,KAJI;AAeXf,IAAAA,WAAW,kCACNO,KAAK,CAACS,UAAN,CAAiBC,KADX;AAETC,MAAAA,KAAK,EAAEX,KAAK,CAACY,OAAN,CAAcC,IAAd,CAAmBC;AAFjB;AAfA,GAAD,CADc,CAA5B;AAsBA,QAAMC,OAAO,GAAGhB,SAAS,EAAzB;AACA,QAAMiB,MAAM,GAAG5B,SAAS,EAAxB;AACA,SACE,MAAC,IAAD;AAAM,IAAA,SAAS,EAAE2B,OAAO,CAACd,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,cAAD;AACE,IAAA,OAAO,EAAE,MAAM;AACbe,MAAAA,MAAM,CAACC,IAAP,CAAYnB,IAAZ;AACD,KAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,MAAC,SAAD;AAAW,IAAA,SAAS,EAAEiB,OAAO,CAACZ,KAA9B;AAAqC,IAAA,KAAK,EAAER,MAA5C;AAAoD,IAAA,KAAK,EAAED,QAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,YAAY,MAAxB;AAAyB,IAAA,OAAO,EAAC,IAAjC;AAAsC,IAAA,SAAS,EAAC,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KADH,CADF,EAIE;AACE,IAAA,SAAS,EAAG,GAAEuB,OAAO,CAACtB,WAAY,QADpC;AAEE,IAAA,uBAAuB,EAAE;AAAEyB,MAAAA,MAAM,EAAEzB;AAAV,KAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CANF,CADF,EAiBE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,MAAC,MAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,OAAO,EAAE,MAAM;AACbuB,MAAAA,MAAM,CAACC,IAAP,CAAYnB,IAAZ;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,CAjBF,CADF;AAkCD,CAnED;;AAqEA,eAAeP,SAAf","sourcesContent":["import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useRouter } from \"next/router\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\n\ntype Props = {\n  title: string;\n  description: string;\n  imgTitle: string;\n  imgURL: string;\n  cardWidth: number;\n  imgHeight: number;\n  link: string;\n};\n\nconst MediaCard = ({\n  title,\n  description,\n  imgTitle,\n  imgURL,\n  cardWidth,\n  imgHeight,\n  link,\n}: Props) => {\n  const useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n      root: {\n        maxWidth: cardWidth,\n      },\n      media: {\n        height: imgHeight,\n        display: \"none\",\n        img: {\n        \n          height: \"100%\",\n          width: \"100%\",\n          objectFit: \"cover\",\n        },\n    \n      },\n      description: {\n        ...theme.typography.body2,\n        color: theme.palette.text.secondary,\n      },\n    })\n  );\n  const classes = useStyles();\n  const router = useRouter();\n  return (\n    <Card className={classes.root}>\n      <CardActionArea\n        onClick={() => {\n          router.push(link);\n        }}\n      >\n        <CardMedia className={classes.media} image={imgURL} title={imgTitle} />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {title}\n          </Typography>\n          <div\n            className={`${classes.description} prose`}\n            dangerouslySetInnerHTML={{ __html: description }}\n          />\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        {/* <Button size=\"small\" color=\"primary\">\n          Share\n        </Button> */}\n        <Button\n          size=\"small\"\n          color=\"primary\"\n          onClick={() => {\n            router.push(link);\n          }}\n        >\n          Learn More\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default MediaCard;\n"]},"metadata":{},"sourceType":"module"}