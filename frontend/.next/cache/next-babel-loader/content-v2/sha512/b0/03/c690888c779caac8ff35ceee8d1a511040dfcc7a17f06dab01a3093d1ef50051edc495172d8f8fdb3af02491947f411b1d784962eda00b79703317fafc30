{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/node/app/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/home/node/app/pages/index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query postsQuery {\\n    posts {\\n      nodes {\\n        date\\n        featuredImage {\\n          title\\n          sourceUrl\\n        }\\n        title\\n        author {\\n          id\\n        }\\n        id\\n        excerpt\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport Layout from \"../components/Layout\";\nimport { gql, useQuery, NetworkStatus } from \"@apollo/client\";\nimport MediaCard from \"../components/Card\";\nexport var __N_SSP = true;\nexport var POSTS_QUERY = gql(_templateObject());\n\nvar IndexPage = function IndexPage() {\n  _s();\n\n  var _useQuery = useQuery(POSTS_QUERY, {\n    context: {\n      clientName: \"wordPress\"\n    },\n    notifyOnNetworkStatusChange: true\n  }),\n      loading = _useQuery.loading,\n      data = _useQuery.data,\n      networkStatus = _useQuery.networkStatus;\n\n  var loadingArticle = networkStatus === NetworkStatus.fetchMore;\n\n  if (loading && !loadingArticle) {\n    return __jsx(Layout, {\n      title: \"Loading | Next.js + TypeScript Example\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, __jsx(MediaCard, {\n      title: \"Loading...\",\n      description: \"Loading...\",\n      imgTitle: \"Loading\",\n      imgURL: \"loading.gif\",\n      cardWidth: 345,\n      imgHeight: 140,\n      link: \"/\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }), \"))\");\n  } else {\n    var posts = data.posts.nodes;\n    return __jsx(Layout, {\n      title: \"Home | Next.js + TypeScript Example\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      className: \"flex items-center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, posts.map(function (item, index) {\n      return __jsx(MediaCard, {\n        key: index,\n        title: item.title,\n        description: item.excerpt || \"\",\n        imgTitle: item.title,\n        imgURL: item.featuredImage.sourceUrl || \"image_not_found.png\",\n        cardWidth: 345,\n        imgHeight: 140,\n        link: \"posts/\".concat(item.id),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 1\n        }\n      });\n    })));\n  }\n};\n\n_s(IndexPage, \"WmGm+hF3wSQyzYbyfPYfQTu+VqY=\", false, function () {\n  return [useQuery];\n});\n\n_c = IndexPage;\nexport default IndexPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"IndexPage\");","map":{"version":3,"sources":["/home/node/app/pages/index.tsx"],"names":["Layout","gql","useQuery","NetworkStatus","MediaCard","POSTS_QUERY","IndexPage","context","clientName","notifyOnNetworkStatusChange","loading","data","networkStatus","loadingArticle","fetchMore","posts","nodes","map","item","index","title","excerpt","featuredImage","sourceUrl","id"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AAEA,SAASC,GAAT,EAAcC,QAAd,EAAwBC,aAAxB,QAA6C,gBAA7C;AACA,OAAOC,SAAP,MAAsB,oBAAtB;;AACA,OAAO,IAAMC,WAAW,GAAGJ,GAAH,mBAAjB;;AAoBP,IAAMK,SAAS,GAAG,SAAZA,SAAY,GAAM;AAAA;;AAAA,kBACmBJ,QAAQ,CAACG,WAAD,EAAc;AAC7DE,IAAAA,OAAO,EAAE;AAAEC,MAAAA,UAAU,EAAE;AAAd,KADoD;AAE7DC,IAAAA,2BAA2B,EAAE;AAFgC,GAAd,CAD3B;AAAA,MACdC,OADc,aACdA,OADc;AAAA,MACLC,IADK,aACLA,IADK;AAAA,MACCC,aADD,aACCA,aADD;;AAMtB,MAAMC,cAAc,GAAGD,aAAa,KAAKT,aAAa,CAACW,SAAvD;;AACA,MAAIJ,OAAO,IAAI,CAACG,cAAhB,EAAgC;AAC9B,WACE,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,wCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD;AACE,MAAA,KAAK,EAAE,YADT;AAEE,MAAA,WAAW,EAAE,YAFf;AAGE,MAAA,QAAQ,EAAE,SAHZ;AAIE,MAAA,MAAM,EAAE,aAJV;AAKE,MAAA,SAAS,EAAE,GALb;AAME,MAAA,SAAS,EAAE,GANb;AAOE,MAAA,IAAI,KAPN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,OADF;AAcD,GAfD,MAeO;AACL,QAAME,KAAK,GAAGJ,IAAI,CAACI,KAAL,CAAWC,KAAzB;AACA,WACE,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,qCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCD,KAAK,CAACE,GAAN,CAAU,UAACC,IAAD,EAAYC,KAAZ;AAAA,aAInB,MAAC,SAAD;AACY,QAAA,GAAG,EAAEA,KADjB;AAEY,QAAA,KAAK,EAAED,IAAI,CAACE,KAFxB;AAGY,QAAA,WAAW,EAAEF,IAAI,CAACG,OAAL,IAAgB,EAHzC;AAIY,QAAA,QAAQ,EAAEH,IAAI,CAACE,KAJ3B;AAKY,QAAA,MAAM,EAAEF,IAAI,CAACI,aAAL,CAAmBC,SAAnB,IAAgC,qBALpD;AAMY,QAAA,SAAS,EAAE,GANvB;AAOY,QAAA,SAAS,EAAE,GAPvB;AAQY,QAAA,IAAI,kBAAWL,IAAI,CAACM,EAAhB,CARhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJmB;AAAA,KAAV,CADD,CADF,CADF;AAqBD;AACF,CA9CD;;GAAMlB,S;UACqCJ,Q;;;KADrCI,S;AA6DN,eAAeA,SAAf","sourcesContent":["import Layout from \"../components/Layout\";\nimport { initializeApollo, addApolloState } from \"../lib/apolloClient\";\nimport { gql, useQuery, NetworkStatus } from \"@apollo/client\";\nimport MediaCard from \"../components/Card\";\nexport const POSTS_QUERY = gql`\n  query postsQuery {\n    posts {\n      nodes {\n        date\n        featuredImage {\n          title\n          sourceUrl\n        }\n        title\n        author {\n          id\n        }\n        id\n        excerpt\n      }\n    }\n  }\n`;\n\nconst IndexPage = () => {\n  const { loading, data, networkStatus } = useQuery(POSTS_QUERY, {\n    context: { clientName: \"wordPress\" },\n    notifyOnNetworkStatusChange: true,\n  });\n\n  const loadingArticle = networkStatus === NetworkStatus.fetchMore;\n  if (loading && !loadingArticle) {\n    return (\n      <Layout title=\"Loading | Next.js + TypeScript Example\">\n        <MediaCard\n          title={\"Loading...\"}\n          description={\"Loading...\"}\n          imgTitle={\"Loading\"}\n          imgURL={\"loading.gif\"}\n          cardWidth={345}\n          imgHeight={140}\n          link={`/`}\n        />\n        ))\n      </Layout>\n    );\n  } else {\n    const posts = data.posts.nodes;\n    return (\n      <Layout title=\"Home | Next.js + TypeScript Example\">\n        <div className=\"flex items-center\">\n        {posts.map((item: any, index: number) => (\n          \n\n          \n<MediaCard\n            key={index}\n            title={item.title}\n            description={item.excerpt || \"\"}\n            imgTitle={item.title}\n            imgURL={item.featuredImage.sourceUrl || \"image_not_found.png\"}\n            cardWidth={345}\n            imgHeight={140}\n            link={`posts/${item.id}`}\n          />\n        ))}\n        </div>\n      </Layout>\n    );\n  }\n};\n\nexport async function getServerSideProps() {\n  const apolloClient = initializeApollo();\n\n  await apolloClient.query({\n    query: POSTS_QUERY,\n    context: { clientName: \"wordPress\" },\n  });\n\n  return addApolloState(apolloClient, {\n    props: {},\n  });\n}\n\nexport default IndexPage;\n"]},"metadata":{},"sourceType":"module"}