{"ast":null,"code":"var _jsxFileName = \"/home/node/app/components/PageNav/index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { useRouter } from \"next/router\";\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\nvar NUM_OF_NAV_PAGES = 3;\n\nvar PageNav = function PageNav(_ref) {\n  _s();\n\n  var pageNumber = _ref.pageNumber,\n      numOfPages = _ref.numOfPages,\n      _ref$curDir = _ref.curDir,\n      curDir = _ref$curDir === void 0 ? \"\" : _ref$curDir;\n  var router = useRouter();\n  var navigablePages = [];\n  var start = NUM_OF_NAV_PAGES * (Math.ceil(pageNumber / NUM_OF_NAV_PAGES) - 1) + 1;\n  var end = Math.min(NUM_OF_NAV_PAGES * Math.ceil(pageNumber / NUM_OF_NAV_PAGES), numOfPages);\n\n  if (pageNumber !== 1) {\n    navigablePages.push(__jsx(IconButton, {\n      onClick: function onClick() {\n        router.push(\"\".concat(curDir, \"/posts/pages/\").concat(pageNumber - 1));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }, __jsx(NavigateBeforeIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    })));\n  }\n\n  if (start !== 1) {\n    navigablePages.push(__jsx(IconButton, {\n      onClick: function onClick() {\n        router.push(\"\".concat(curDir, \"/posts/pages/\").concat(start - 1));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, \"...\"));\n  }\n\n  var _loop = function _loop(i) {\n    if (pageNumber === i) {\n      navigablePages.push(__jsx(IconButton, {\n        disabled: true,\n        onClick: function onClick() {\n          router.push(\"\".concat(curDir, \"/posts/pages/\").concat(i));\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }\n      }, i));\n    } else {\n      navigablePages.push(__jsx(IconButton, {\n        onClick: function onClick() {\n          router.push(\"\".concat(curDir, \"/posts/pages/\").concat(i));\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }\n      }, i));\n    }\n  };\n\n  for (var i = start; i <= end; i++) {\n    _loop(i);\n  }\n\n  if (end !== numOfPages) {\n    navigablePages.push(__jsx(IconButton, {\n      onClick: function onClick() {\n        router.push(\"\".concat(curDir, \"/posts/pages/\").concat(end + 1));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }\n    }, \"...\"));\n  }\n\n  if (pageNumber !== numOfPages) {\n    navigablePages.push(__jsx(IconButton, {\n      onClick: function onClick() {\n        router.push(\"\".concat(curDir, \"/posts/pages/\").concat(pageNumber + 1));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }\n    }, __jsx(NavigateNextIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    })));\n  }\n\n  return __jsx(\"nav\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 10\n    }\n  }, navigablePages);\n};\n\n_s(PageNav, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = PageNav;\nexport default PageNav;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageNav\");","map":{"version":3,"sources":["/home/node/app/components/PageNav/index.tsx"],"names":["React","IconButton","useRouter","NavigateBeforeIcon","NavigateNextIcon","NUM_OF_NAV_PAGES","PageNav","pageNumber","numOfPages","curDir","router","navigablePages","start","Math","ceil","end","min","push","i"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { useRouter } from \"next/router\";\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\n\nconst NUM_OF_NAV_PAGES = 3;\n\ntype Props = {\n  pageNumber: number;\n  numOfPages: number;\n  curDir?: String;\n};\n\nconst PageNav = ({ pageNumber, numOfPages, curDir = \"\" }: Props) => {\n  const router = useRouter();\n  let navigablePages = [];\n  let start =\n    NUM_OF_NAV_PAGES * (Math.ceil(pageNumber / NUM_OF_NAV_PAGES) - 1) + 1;\n  let end = Math.min(\n    NUM_OF_NAV_PAGES * Math.ceil(pageNumber / NUM_OF_NAV_PAGES),\n    numOfPages\n  );\n  if (pageNumber !== 1) {\n    navigablePages.push(\n      <IconButton\n        onClick={() => {\n          router.push(`${curDir}/posts/pages/${pageNumber - 1}`);\n        }}\n      >\n        <NavigateBeforeIcon />\n      </IconButton>\n    );\n  }\n\n  if (start !== 1) {\n    navigablePages.push(\n      <IconButton\n        onClick={() => {\n          router.push(`${curDir}/posts/pages/${start - 1}`);\n        }}\n      >\n        {\"...\"}\n      </IconButton>\n    );\n  }\n\n  for (let i = start; i <= end; i++) {\nif(pageNumber === i) {\n      navigablePages.push(\n        <IconButton\n          disabled\n          onClick={() => {\n            router.push(`${curDir}/posts/pages/${i}`);\n          }}\n        >\n          {i}\n        </IconButton>\n      );\n    } else {\n      navigablePages.push(\n        <IconButton\n          onClick={() => {\n            router.push(`${curDir}/posts/pages/${i}`);\n          }}\n        >\n          {i}\n        </IconButton>\n      );\n    }\n  }\n\n  if (end !== numOfPages) {\n    navigablePages.push(\n      <IconButton\n        onClick={() => {\n          router.push(`${curDir}/posts/pages/${end + 1}`);\n        }}\n      >\n        {\"...\"}\n      </IconButton>\n    );\n  }\n\n  if (pageNumber !== numOfPages) {  \n    navigablePages.push(<IconButton\n      onClick={() => {\n        router.push(`${curDir}/posts/pages/${pageNumber + 1}`);\n      }}\n    >\n      <NavigateNextIcon />\n    </IconButton>);\n  }\n\n  return <nav>{navigablePages}</nav>;\n};\n\nexport default PageNav;\n"]},"metadata":{},"sourceType":"module"}