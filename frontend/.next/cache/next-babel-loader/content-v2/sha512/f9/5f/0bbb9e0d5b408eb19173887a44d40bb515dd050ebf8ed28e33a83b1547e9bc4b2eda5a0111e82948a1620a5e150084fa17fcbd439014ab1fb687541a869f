{"ast":null,"code":"var _jsxFileName = \"/home/node/app/pages/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/Layout\";\nimport { initializeApollo, addApolloState } from \"../lib/apolloClient\";\nimport { gql, useQuery, NetworkStatus } from \"@apollo/client\";\nimport MediaCard from \"../components/Card\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\nexport const POSTS_QUERY = gql`\n  query postsQuery {\n    posts {\n      nodes {\n        date\n        featuredImage {\n          title\n          sourceUrl\n        }\n        title\n        author {\n          id\n        }\n        id\n        slug\n        excerpt\n      }\n    }\n  }\n`;\n\nconst IndexPage = () => {\n  const {\n    loading,\n    data,\n    networkStatus\n  } = useQuery(POSTS_QUERY, {\n    context: {\n      clientName: \"wordPress\"\n    },\n    notifyOnNetworkStatusChange: true\n  });\n  const loadingArticle = networkStatus === NetworkStatus.fetchMore;\n\n  if (loading && !loadingArticle) {\n    return __jsx(Layout, {\n      title: \"Loading | Next.js + TypeScript Example\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, __jsx(MediaCard, {\n      title: \"Loading...\",\n      description: \"Loading...\",\n      imgTitle: \"Loading\",\n      imgURL: \"loading.gif\",\n      cardWidth: 345,\n      imgHeight: 140,\n      link: `/`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }), \"))\");\n  } else {\n    const posts = data.posts.nodes;\n    return __jsx(Layout, {\n      title: \"Home | Next.js + TypeScript Example\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      className: \"flex flex-col items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, posts.map((item, index) => __jsx(\"div\", {\n      className: \"m-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, __jsx(MediaCard, {\n      key: index,\n      title: item.title,\n      description: item.excerpt || \"\",\n      imgTitle: item.title,\n      imgURL: item.featuredImage ? item.featuredImage.sourceUrl : \"image_not_found.png\",\n      cardWidth: 345,\n      imgHeight: 140,\n      link: `posts/${item.slug}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }\n    }))), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, __jsx(IconButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, __jsx(NavigateBeforeIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    })), __jsx(IconButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, __jsx(NavigateNextIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    })))));\n  }\n};\n\nexport async function getServerSideProps() {\n  const apolloClient = initializeApollo();\n  await apolloClient.query({\n    query: POSTS_QUERY,\n    context: {\n      clientName: \"wordPress\"\n    }\n  });\n  return addApolloState(apolloClient, {\n    props: {}\n  });\n}\nexport default IndexPage;","map":{"version":3,"sources":["/home/node/app/pages/index.tsx"],"names":["Layout","initializeApollo","addApolloState","gql","useQuery","NetworkStatus","MediaCard","IconButton","NavigateBeforeIcon","NavigateNextIcon","POSTS_QUERY","IndexPage","loading","data","networkStatus","context","clientName","notifyOnNetworkStatusChange","loadingArticle","fetchMore","posts","nodes","map","item","index","title","excerpt","featuredImage","sourceUrl","slug","getServerSideProps","apolloClient","query","props"],"mappings":"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","sourcesContent":["import Layout from \"../components/Layout\";\nimport { initializeApollo, addApolloState } from \"../lib/apolloClient\";\nimport { gql, useQuery, NetworkStatus } from \"@apollo/client\";\nimport MediaCard from \"../components/Card\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\n\nexport const POSTS_QUERY = gql`\n  query postsQuery {\n    posts {\n      nodes {\n        date\n        featuredImage {\n          title\n          sourceUrl\n        }\n        title\n        author {\n          id\n        }\n        id\n        slug\n        excerpt\n      }\n    }\n  }\n`;\n\nconst IndexPage = () => {\n  const { loading, data, networkStatus } = useQuery(POSTS_QUERY, {\n    context: { clientName: \"wordPress\" },\n    notifyOnNetworkStatusChange: true,\n  });\n\n  const loadingArticle = networkStatus === NetworkStatus.fetchMore;\n  if (loading && !loadingArticle) {\n    return (\n      <Layout title=\"Loading | Next.js + TypeScript Example\">\n        <MediaCard\n          title={\"Loading...\"}\n          description={\"Loading...\"}\n          imgTitle={\"Loading\"}\n          imgURL={\"loading.gif\"}\n          cardWidth={345}\n          imgHeight={140}\n          link={`/`}\n        />\n        ))\n      </Layout>\n    );\n  } else {\n    const posts = data.posts.nodes;\n    return (\n      <Layout title=\"Home | Next.js + TypeScript Example\">\n        <div className=\"flex flex-col items-center\">\n          {posts.map((item: any, index: number) => (\n            <div className=\"m-4\">\n              <MediaCard\n                key={index}\n                title={item.title}\n                description={item.excerpt || \"\"}\n                imgTitle={item.title}\n                imgURL={\n                  item.featuredImage\n                    ? item.featuredImage.sourceUrl\n                    : \"image_not_found.png\"\n                }\n                cardWidth={345}\n                imgHeight={140}\n                link={`posts/${item.slug}`}\n              />\n            </div>\n          ))}\n          <div>\n            <IconButton>\n              <NavigateBeforeIcon />\n            </IconButton>\n            <IconButton>\n              <NavigateNextIcon />\n            </IconButton>\n          </div>\n        </div>\n      </Layout>\n    );\n  }\n};\n\nexport async function getServerSideProps() {\n  const apolloClient = initializeApollo();\n\n  await apolloClient.query({\n    query: POSTS_QUERY,\n    context: { clientName: \"wordPress\" },\n  });\n\n  return addApolloState(apolloClient, {\n    props: {},\n  });\n}\n\nexport default IndexPage;\n"]},"metadata":{},"sourceType":"module"}