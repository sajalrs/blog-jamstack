{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/Layout\";\nimport { initializeApollo, addApolloState } from \"../lib/apolloClient\";\nimport { MENU_QUERY } from \"../components/Navbar\";\nimport { gql } from \"@apollo/client\";\nimport TeamMemberCard from \"../components/TeamMemberCard\";\nexport const TEAM_MEMBERS_QUERY = gql`\n  query teamMembersQuery(\n    $first: Int\n    $last: Int\n    $after: String\n    $before: String\n  ) {\n    teamMembers(first: $first, last: $last, after: $after, before: $before) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          teamMember {\n            description\n            name\n            image {\n              sourceUrl\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst AboutPage = ({\n  errors,\n  menuListItems,\n  teamMembers\n}) => {\n  if (errors) {\n    return __jsx(Layout, {\n      menuListItems: menuListItems,\n      title: \"Error | Next.js + TypeScript Example\"\n    }, __jsx(\"p\", null, __jsx(\"span\", {\n      style: {\n        color: \"red\"\n      }\n    }, \"Error:\"), \" \", errors));\n  }\n\n  return __jsx(Layout, {\n    menuListItems: menuListItems,\n    title: \"Home | Next.js + TypeScript Example\"\n  }, __jsx(\"div\", {\n    className: \"flex flex-col justify-center items-center max-w-full m-1 md:m-4 overflow-x-hidden\"\n  }, teamMembers.map(teamMember => {\n    return __jsx(TeamMemberCard, {\n      teamMember: teamMember\n    });\n  })));\n};\n\nexport default AboutPage;\nexport const getStaticProps = async () => {\n  try {\n    const apolloClient = initializeApollo();\n    let teamMembers = [];\n    let hasNextPage;\n    let nextCursor = null;\n\n    do {\n      const {\n        data\n      } = await apolloClient.query({\n        query: TEAM_MEMBERS_QUERY,\n        variables: {\n          first: 10,\n          last: null,\n          after: nextCursor,\n          before: null\n        },\n        context: {\n          clientName: \"wordPress\"\n        }\n      });\n      teamMembers.push(...data.teamMembers.edges.map(edge => edge.node.teamMember));\n      hasNextPage = data.teamMembers.pageInfo.hasNextPage;\n      nextCursor = data.teamMembers.pageInfo.endCursor;\n    } while (hasNextPage);\n\n    const menuListItems = await apolloClient.query({\n      query: MENU_QUERY,\n      context: {\n        clientName: \"wordPress\"\n      }\n    }).then(res => res.data.menuItems.nodes.map(node => ({\n      title: node.label,\n      pageURL: node.url\n    })));\n    return addApolloState(apolloClient, {\n      props: {\n        teamMembers,\n        menuListItems\n      }\n    });\n  } catch (err) {\n    return {\n      props: {\n        errors: err.message\n      }\n    };\n  }\n};","map":null,"metadata":{},"sourceType":"module"}