{"ast":null,"code":"var _jsxFileName = \"/home/node/app/components/PageNav/index.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { useRouter } from \"next/router\";\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\nconst NUM_OF_NAV_PAGES = 2;\n\nconst PageNav = ({\n  pageNumber,\n  numOfPages\n}) => {\n  const router = useRouter();\n  let navigablePages = [];\n  let start = NUM_OF_NAV_PAGES * (Math.ceil(pageNumber / NUM_OF_NAV_PAGES) - 1) + 1;\n  let end = Math.min(NUM_OF_NAV_PAGES * Math.ceil(pageNumber / NUM_OF_NAV_PAGES), numOfPages - 1);\n\n  if (pageNumber !== 1) {\n    navigablePages.push(__jsx(IconButton, {\n      onClick: () => {\n        router.push(pageNumber === 2 ? `/` : `/${pageNumber - 1}`);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, __jsx(NavigateBeforeIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    })));\n  }\n\n  if (start !== 1) {\n    navigablePages.push(__jsx(IconButton, {\n      onClick: () => {\n        router.push(`/${start - 1}`);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, \"...\"));\n  }\n\n  for (let i = start; i <= end; i++) {\n    if (i === 1) {\n      if (pageNumber == 1) {\n        navigablePages.push(__jsx(IconButton, {\n          disabled: true,\n          onClick: () => {\n            router.push(`/`);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 11\n          }\n        }, \"1\"));\n      } else {\n        navigablePages.push(__jsx(IconButton, {\n          onClick: () => {\n            router.push(`/`);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 11\n          }\n        }, \"1\"));\n      }\n    } else if (pageNumber === i) {\n      navigablePages.push(__jsx(IconButton, {\n        disabled: true,\n        onClick: () => {\n          router.push(`/${i}`);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }\n      }, i));\n    } else {\n      navigablePages.push(__jsx(IconButton, {\n        onClick: () => {\n          router.push(`/${i}`);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }\n      }, i));\n    }\n  }\n\n  if (end !== numOfPages - 1) {\n    navigablePages.push(__jsx(IconButton, {\n      onClick: () => {\n        router.push(`/${end + 1}`);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }\n    }, \"...\"));\n  }\n\n  if (pageNumber !== numOfPages - 1) {\n    navigablePages.push(__jsx(IconButton, {\n      onClick: () => {\n        router.push(`/${pageNumber + 1}`);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 25\n      }\n    }, __jsx(NavigateNextIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }\n    })));\n  }\n\n  return __jsx(\"nav\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 10\n    }\n  }, navigablePages);\n};\n\nexport default PageNav;","map":{"version":3,"sources":["/home/node/app/components/PageNav/index.tsx"],"names":["React","IconButton","useRouter","NavigateBeforeIcon","NavigateNextIcon","NUM_OF_NAV_PAGES","PageNav","pageNumber","numOfPages","router","navigablePages","start","Math","ceil","end","min","push","i"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { useRouter } from \"next/router\";\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\n\nconst NUM_OF_NAV_PAGES = 2;\n\ntype Props = {\n  pageNumber: number;\n  numOfPages: number;\n};\n\nconst PageNav = ({ pageNumber, numOfPages }: Props) => {\n  const router = useRouter();\n  let navigablePages = [];\n  let start =\n    NUM_OF_NAV_PAGES * (Math.ceil(pageNumber / NUM_OF_NAV_PAGES) - 1) + 1;\n  let end = Math.min(\n    NUM_OF_NAV_PAGES * Math.ceil(pageNumber / NUM_OF_NAV_PAGES),\n    numOfPages-1\n  );\n  if (pageNumber !== 1) {\n    navigablePages.push(\n      <IconButton\n        onClick={() => {\n          router.push(pageNumber === 2 ? `/` : `/${pageNumber - 1}`);\n        }}\n      >\n        <NavigateBeforeIcon />\n      </IconButton>\n    );\n  }\n\n  if (start !== 1) {\n    navigablePages.push(\n      <IconButton\n        onClick={() => {\n          router.push(`/${start - 1}`);\n        }}\n      >\n        {\"...\"}\n      </IconButton>\n    );\n  }\n\n  for (let i = start; i <= end; i++) {\n    if (i === 1) {\n      if (pageNumber == 1) {\n        navigablePages.push(\n          <IconButton\n            disabled\n            onClick={() => {\n              router.push(`/`);\n            }}\n          >\n            1\n          </IconButton>\n        );\n      } else {\n        navigablePages.push(\n          <IconButton\n            onClick={() => {\n              router.push(`/`);\n            }}\n          >\n            1\n          </IconButton>\n        );\n      }\n    } else if (pageNumber === i) {\n      navigablePages.push(\n        <IconButton\n          disabled\n          onClick={() => {\n            router.push(`/${i}`);\n          }}\n        >\n          {i}\n        </IconButton>\n      );\n    } else {\n      navigablePages.push(\n        <IconButton\n          onClick={() => {\n            router.push(`/${i}`);\n          }}\n        >\n          {i}\n        </IconButton>\n      );\n    }\n  }\n\n  if (end !== numOfPages-1) {\n    navigablePages.push(\n      <IconButton\n        onClick={() => {\n          router.push(`/${end + 1}`);\n        }}\n      >\n        {\"...\"}\n      </IconButton>\n    );\n  }\n\n  if (pageNumber !== numOfPages-1) {\n  \n    navigablePages.push(<IconButton\n      onClick={() => {\n        router.push(`/${pageNumber + 1}`);\n      }}\n    >\n      <NavigateNextIcon />\n    </IconButton>);\n  }\n\n  return <nav>{navigablePages}</nav>;\n};\n\nexport default PageNav;\n"]},"metadata":{},"sourceType":"module"}