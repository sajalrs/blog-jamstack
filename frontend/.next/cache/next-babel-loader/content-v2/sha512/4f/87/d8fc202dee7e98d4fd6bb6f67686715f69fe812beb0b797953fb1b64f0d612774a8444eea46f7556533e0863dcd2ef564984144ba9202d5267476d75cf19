{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/node/app/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/home/node/app/pages/index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query postsQuery($first: Int, $last: Int, $after: String, $before: String) {\\n    posts(first: $first, last: $last, after: $after, before: $before) {\\n      pageInfo {\\n        hasNextPage\\n        hasPreviousPage\\n        startCursor\\n        endCursor\\n      }\\n      edges {\\n        cursor\\n        node {\\n          date\\n          featuredImage {\\n            title\\n            sourceUrl\\n          }\\n          title\\n          author {\\n            id\\n          }\\n          id\\n          slug\\n          excerpt\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport Layout from \"../components/Layout\";\nimport { gql, useQuery, NetworkStatus } from \"@apollo/client\";\nimport MediaCard from \"../components/Card\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\nexport var __N_SSP = true;\nexport var POSTS_QUERY = gql(_templateObject());\n\nvar updateQuery = function updateQuery(previousResult, _ref) {\n  var fetchMoreResult = _ref.fetchMoreResult;\n  return fetchMoreResult.posts.edges.length ? fetchMoreResult : previousResult;\n};\n\nvar IndexPage = function IndexPage() {\n  _s();\n\n  var _useQuery = useQuery(POSTS_QUERY, {\n    context: {\n      clientName: \"wordPress\"\n    },\n    variables: {\n      first: 1,\n      last: null,\n      after: null,\n      before: null\n    },\n    notifyOnNetworkStatusChange: true\n  }),\n      loading = _useQuery.loading,\n      data = _useQuery.data,\n      networkStatus = _useQuery.networkStatus,\n      fetchMore = _useQuery.fetchMore;\n\n  var loadingArticle = networkStatus === NetworkStatus.fetchMore;\n  var posts = data.posts;\n\n  if (loading && !loadingArticle) {\n    return __jsx(Layout, {\n      title: \"Loading | Next.js + TypeScript Example\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }, __jsx(MediaCard, {\n      title: \"Loading...\",\n      description: \"Loading...\",\n      imgTitle: \"Loading\",\n      imgURL: \"loading.gif\",\n      cardWidth: 345,\n      imgHeight: 140,\n      link: \"/\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }), \"))\");\n  } else {\n    return __jsx(Layout, {\n      title: \"Home | Next.js + TypeScript Example\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      className: \"flex flex-col items-center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, posts.edges.map(function (edge, index) {\n      var node = edge.node;\n      return __jsx(\"div\", {\n        className: \"m-4\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }\n      }, __jsx(MediaCard, {\n        key: index,\n        title: node.title,\n        description: node.excerpt || \"\",\n        imgTitle: node.title,\n        imgURL: node.featuredImage ? node.featuredImage.sourceUrl : \"image_not_found.png\",\n        cardWidth: 345,\n        imgHeight: 140,\n        link: \"posts/\".concat(node.slug),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }\n      }));\n    }), __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }, data.posts.pageInfo.hasPreviousPage ? __jsx(IconButton, {\n      onClick: function onClick() {\n        fetchMore({\n          variables: {\n            first: null,\n            after: null,\n            last: 2,\n            before: data.posts.pageInfo.startCursor || null\n          },\n          updateQuery: updateQuery\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 15\n      }\n    }, __jsx(NavigateBeforeIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    })) : null, data.posts.pageInfo.hasNextPage ? __jsx(IconButton, {\n      onClick: function onClick() {\n        fetchMore({\n          variables: {\n            first: 2,\n            after: data.posts.pageInfo.endCursor || null,\n            last: null,\n            before: null\n          },\n          updateQuery: updateQuery\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }\n    }, __jsx(NavigateNextIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    })) : null)));\n  }\n};\n\n_s(IndexPage, \"i4Wf9b280u2HxZt5P7ZbwcaUfZY=\", false, function () {\n  return [useQuery];\n});\n\n_c = IndexPage;\nexport default IndexPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"IndexPage\");","map":{"version":3,"sources":["/home/node/app/pages/index.tsx"],"names":["Layout","gql","useQuery","NetworkStatus","MediaCard","IconButton","NavigateBeforeIcon","NavigateNextIcon","POSTS_QUERY","updateQuery","previousResult","fetchMoreResult","posts","edges","length","IndexPage","context","clientName","variables","first","last","after","before","notifyOnNetworkStatusChange","loading","data","networkStatus","fetchMore","loadingArticle","map","edge","index","node","title","excerpt","featuredImage","sourceUrl","slug","pageInfo","hasPreviousPage","startCursor","hasNextPage","endCursor"],"mappings":"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","sourcesContent":["import Layout from \"../components/Layout\";\nimport { initializeApollo, addApolloState } from \"../lib/apolloClient\";\nimport { gql, useQuery, NetworkStatus } from \"@apollo/client\";\nimport MediaCard from \"../components/Card\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\nimport { FetchResult } from \"apollo-link\";\n\nexport const POSTS_QUERY = gql`\n  query postsQuery($first: Int, $last: Int, $after: String, $before: String) {\n    posts(first: $first, last: $last, after: $after, before: $before) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        cursor\n        node {\n          date\n          featuredImage {\n            title\n            sourceUrl\n          }\n          title\n          author {\n            id\n          }\n          id\n          slug\n          excerpt\n        }\n      }\n    }\n  }\n`;\n\nconst updateQuery = (\n  previousResult: FetchResult,\n  { fetchMoreResult }: { fetchMoreResult?: any }\n) => {\n  return fetchMoreResult.posts.edges.length ? fetchMoreResult : previousResult;\n};\n\nconst IndexPage = () => {\n  const { loading, data, networkStatus, fetchMore } = useQuery(POSTS_QUERY, {\n    context: { clientName: \"wordPress\" },\n    variables: {\n      first: 1,\n      last: null,\n      after: null,\n      before: null,\n    },\n    notifyOnNetworkStatusChange: true,\n  });\n\n  const loadingArticle = networkStatus === NetworkStatus.fetchMore;\n  const { posts } = data;\n  if (loading && !loadingArticle) {\n    return (\n      <Layout title=\"Loading | Next.js + TypeScript Example\">\n        <MediaCard\n          title={\"Loading...\"}\n          description={\"Loading...\"}\n          imgTitle={\"Loading\"}\n          imgURL={\"loading.gif\"}\n          cardWidth={345}\n          imgHeight={140}\n          link={`/`}\n        />\n        ))\n      </Layout>\n    );\n  } else {\n    return (\n      <Layout title=\"Home | Next.js + TypeScript Example\">\n        <div className=\"flex flex-col items-center\">\n          {posts.edges.map((edge: any, index: number) => {\n            const { node } = edge;\n\n            return (\n              <div className=\"m-4\">\n                <MediaCard\n                  key={index}\n                  title={node.title}\n                  description={node.excerpt || \"\"}\n                  imgTitle={node.title}\n                  imgURL={\n                    node.featuredImage\n                      ? node.featuredImage.sourceUrl\n                      : \"image_not_found.png\"\n                  }\n                  cardWidth={345}\n                  imgHeight={140}\n                  link={`posts/${node.slug}`}\n                />\n              </div>\n            );\n          })}\n          <div>\n            {data.posts.pageInfo.hasPreviousPage ? (\n              <IconButton\n                onClick={() => {\n                  fetchMore({\n                    variables: {\n                      first: null,\n                      after: null,\n                      last: 2,\n                      before: data.posts.pageInfo.startCursor || null,\n                    },\n                    updateQuery,\n                  });\n                }}\n              >\n                <NavigateBeforeIcon />\n              </IconButton>\n            ) : null}\n\n            {data.posts.pageInfo.hasNextPage ? (\n              <IconButton\n                onClick={() => {\n                  fetchMore({\n                    variables: {\n                      first: 2,\n                      after: data.posts.pageInfo.endCursor || null,\n                      last: null,\n                      before: null,\n                    },\n                    updateQuery,\n                  });\n                }}\n              >\n                <NavigateNextIcon />\n              </IconButton>\n            ) : null}\n          </div>\n        </div>\n      </Layout>\n    );\n  }\n};\n\nexport async function getServerSideProps() {\n  const apolloClient = initializeApollo();\n\n  await apolloClient.query({\n    query: POSTS_QUERY,\n    context: { clientName: \"wordPress\" },\n    variables: {\n      first: 1,\n      last: null,\n      after: null,\n      before: null,\n    },\n  });\n\n  return addApolloState(apolloClient, {\n    props: {},\n  });\n}\n\nexport default IndexPage;\n"]},"metadata":{},"sourceType":"module"}