{"ast":null,"code":"var _jsxFileName = \"/home/node/app/pages/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from \"next/link\";\nimport Layout from \"../components/Layout\";\nimport { initializeApollo, addApolloState } from \"../lib/apolloClient\";\nimport { gql, useQuery, NetworkStatus } from \"@apollo/client\";\nimport MediaCard from \"../components/Card\";\nexport const POSTS_QUERY = gql`\n  query postsQuery {\n    posts {\n      nodes {\n        date\n        featuredImage {\n          title\n          sourceUrl\n        }\n        title\n        author {\n          id\n        }\n        id\n        excerpt\n      }\n    }\n  }\n`;\n\nconst IndexPage = () => {\n  const {\n    loading,\n    data,\n    networkStatus\n  } = useQuery(POSTS_QUERY, {\n    context: {\n      clientName: \"wordPress\"\n    },\n    notifyOnNetworkStatusChange: true\n  });\n  const loadingArticle = networkStatus === NetworkStatus.fetchMore;\n  let posts;\n\n  if (loading && !loadingArticle) {\n    posts = [];\n  } else {\n    posts = data.posts.nodes;\n  }\n\n  return __jsx(Layout, {\n    title: \"Home | Next.js + TypeScript Example\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, \"Hello Next.js \\uD83D\\uDC4B\"), posts.map(item => __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, item.title)), posts.map(item => __jsx(MediaCard, {\n    title: item.title,\n    description: item.excerpt || \"Lizards are a widespread group of squamate reptiles, with over 6,000 species, rangin across all continents except Antarctica\",\n    imgTitle: item.title,\n    imgURL: \"image_not_found.png\",\n    cardWidth: 345,\n    imgHeight: 140,\n    link: `posts/${item.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  })), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, __jsx(Link, {\n    href: \"/about\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, \"About\"))));\n};\n\nexport async function getServerSideProps() {\n  const apolloClient = initializeApollo();\n  await apolloClient.query({\n    query: POSTS_QUERY,\n    context: {\n      clientName: \"wordPress\"\n    }\n  });\n  return addApolloState(apolloClient, {\n    props: {}\n  });\n}\nexport default IndexPage;","map":{"version":3,"sources":["/home/node/app/pages/index.tsx"],"names":["Link","Layout","initializeApollo","addApolloState","gql","useQuery","NetworkStatus","MediaCard","POSTS_QUERY","IndexPage","loading","data","networkStatus","context","clientName","notifyOnNetworkStatusChange","loadingArticle","fetchMore","posts","nodes","map","item","title","excerpt","id","getServerSideProps","apolloClient","query","props"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,gBAAT,EAA2BC,cAA3B,QAAiD,qBAAjD;AACA,SAASC,GAAT,EAAcC,QAAd,EAAwBC,aAAxB,QAA6C,gBAA7C;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAO,MAAMC,WAAW,GAAGJ,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlBO;;AAoBP,MAAMK,SAAS,GAAG,MAAM;AACtB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,IAAX;AAAiBC,IAAAA;AAAjB,MAAmCP,QAAQ,CAACG,WAAD,EAAc;AAC7DK,IAAAA,OAAO,EAAE;AAAEC,MAAAA,UAAU,EAAE;AAAd,KADoD;AAE7DC,IAAAA,2BAA2B,EAAE;AAFgC,GAAd,CAAjD;AAKA,QAAMC,cAAc,GAAGJ,aAAa,KAAKN,aAAa,CAACW,SAAvD;AAEA,MAAIC,KAAJ;;AACA,MAAIR,OAAO,IAAI,CAACM,cAAhB,EAAgC;AAC9BE,IAAAA,KAAK,GAAG,EAAR;AACD,GAFD,MAEO;AACLA,IAAAA,KAAK,GAAGP,IAAI,CAACO,KAAL,CAAWC,KAAnB;AACD;;AAED,SACE,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,qCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,EAEGD,KAAK,CAACE,GAAN,CAAWC,IAAD,IACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,IAAI,CAACC,KAAT,CADD,CAFH,EAMGJ,KAAK,CAACE,GAAN,CAAWC,IAAD,IACT,MAAC,SAAD;AACE,IAAA,KAAK,EAAEA,IAAI,CAACC,KADd;AAEE,IAAA,WAAW,EACTD,IAAI,CAACE,OAAL,IACA,8HAJJ;AAME,IAAA,QAAQ,EAAEF,IAAI,CAACC,KANjB;AAOE,IAAA,MAAM,EAEJ,qBATJ;AAWE,IAAA,SAAS,EAAE,GAXb;AAYE,IAAA,SAAS,EAAE,GAZb;AAaE,IAAA,IAAI,EAAG,SAAQD,IAAI,CAACG,EAAG,EAbzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CANH,EAuBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CADF,CAvBF,CADF;AA+BD,CA9CD;;AAgDA,OAAO,eAAeC,kBAAf,GAAoC;AACzC,QAAMC,YAAY,GAAGxB,gBAAgB,EAArC;AAEA,QAAMwB,YAAY,CAACC,KAAb,CAAmB;AACvBA,IAAAA,KAAK,EAAEnB,WADgB;AAEvBK,IAAAA,OAAO,EAAE;AAAEC,MAAAA,UAAU,EAAE;AAAd;AAFc,GAAnB,CAAN;AAKA,SAAOX,cAAc,CAACuB,YAAD,EAAe;AAClCE,IAAAA,KAAK,EAAE;AAD2B,GAAf,CAArB;AAGD;AAED,eAAenB,SAAf","sourcesContent":["import Link from \"next/link\";\nimport Layout from \"../components/Layout\";\nimport { initializeApollo, addApolloState } from \"../lib/apolloClient\";\nimport { gql, useQuery, NetworkStatus } from \"@apollo/client\";\nimport MediaCard from \"../components/Card\";\nexport const POSTS_QUERY = gql`\n  query postsQuery {\n    posts {\n      nodes {\n        date\n        featuredImage {\n          title\n          sourceUrl\n        }\n        title\n        author {\n          id\n        }\n        id\n        excerpt\n      }\n    }\n  }\n`;\n\nconst IndexPage = () => {\n  const { loading, data, networkStatus } = useQuery(POSTS_QUERY, {\n    context: { clientName: \"wordPress\" },\n    notifyOnNetworkStatusChange: true,\n  });\n\n  const loadingArticle = networkStatus === NetworkStatus.fetchMore;\n\n  let posts;\n  if (loading && !loadingArticle) {\n    posts = [];\n  } else {\n    posts = data.posts.nodes;\n  }\n\n  return (\n    <Layout title=\"Home | Next.js + TypeScript Example\">\n      <h1>Hello Next.js ðŸ‘‹</h1>\n      {posts.map((item: any) => (\n        <p>{item.title}</p>\n      ))}\n\n      {posts.map((item: any) => (\n        <MediaCard\n          title={item.title}\n          description={\n            item.excerpt ||\n            \"Lizards are a widespread group of squamate reptiles, with over 6,000 species, rangin across all continents except Antarctica\"\n          }\n          imgTitle={item.title}\n          imgURL={\n           \n            \"image_not_found.png\"\n          }\n          cardWidth={345}\n          imgHeight={140}\n          link={`posts/${item.id}`}\n        />\n      ))}\n      <p>\n        <Link href=\"/about\">\n          <a>About</a>\n        </Link>\n      </p>\n    </Layout>\n  );\n};\n\nexport async function getServerSideProps() {\n  const apolloClient = initializeApollo();\n\n  await apolloClient.query({\n    query: POSTS_QUERY,\n    context: { clientName: \"wordPress\" },\n  });\n\n  return addApolloState(apolloClient, {\n    props: {},\n  });\n}\n\nexport default IndexPage;\n"]},"metadata":{},"sourceType":"module"}