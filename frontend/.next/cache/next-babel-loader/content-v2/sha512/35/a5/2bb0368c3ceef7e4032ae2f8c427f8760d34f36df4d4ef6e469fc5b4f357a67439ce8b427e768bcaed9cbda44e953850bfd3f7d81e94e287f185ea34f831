{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/sajalrs/WebDevelopment/blog-jamstack/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/home/sajalrs/WebDevelopment/blog-jamstack/frontend/pages/about.tsx\",\n    _this = this;\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query teamMembersQuery(\\n    $first: Int\\n    $last: Int\\n    $after: String\\n    $before: String\\n  ) {\\n    teamMembers(first: $first, last: $last, after: $after, before: $before) {\\n      pageInfo {\\n        hasNextPage\\n        hasPreviousPage\\n        startCursor\\n        endCursor\\n      }\\n      edges {\\n        node {\\n          teamMember {\\n            description\\n            name\\n            image {\\n              sourceUrl\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport Layout from \"../components/Layout\";\nimport { gql } from \"@apollo/client\";\nimport TeamMemberCard from \"../components/TeamMemberCard\";\nexport var __N_SSG = true;\nexport var TEAM_MEMBERS_QUERY = gql(_templateObject());\n\nvar AboutPage = function AboutPage(_ref) {\n  var errors = _ref.errors,\n      menuListItems = _ref.menuListItems,\n      teamMembers = _ref.teamMembers;\n\n  if (errors) {\n    return __jsx(Layout, {\n      menuListItems: menuListItems,\n      title: \"Error | Next.js + TypeScript Example\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, __jsx(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, \"Error:\"), \" \", errors));\n  }\n\n  return __jsx(Layout, {\n    menuListItems: menuListItems,\n    title: \"Home | Next.js + TypeScript Example\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, teamMembers.map(function (teamMember) {\n    return __jsx(TeamMemberCard, {\n      teamMember: teamMember,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 18\n      }\n    });\n  }));\n};\n\n_c = AboutPage;\nexport default AboutPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AboutPage\");","map":{"version":3,"sources":["/home/sajalrs/WebDevelopment/blog-jamstack/frontend/pages/about.tsx"],"names":["Layout","gql","TeamMemberCard","TEAM_MEMBERS_QUERY","AboutPage","errors","menuListItems","teamMembers","color","map","teamMember"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AAIA,SAASC,GAAT,QAAoB,gBAApB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;;AACA,OAAO,IAAMC,kBAAkB,GAAGF,GAAH,mBAAxB;;AA2CP,IAAMG,SAAS,GAAG,SAAZA,SAAY,OAAmD;AAAA,MAAhDC,MAAgD,QAAhDA,MAAgD;AAAA,MAAxCC,aAAwC,QAAxCA,aAAwC;AAAA,MAAzBC,WAAyB,QAAzBA,WAAyB;;AACnE,MAAIF,MAAJ,EAAY;AACV,WACE,MAAC,MAAD;AACE,MAAA,aAAa,EAAEC,aADjB;AAEE,MAAA,KAAK,EAAC,sCAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,KAAK,EAAE;AAAEE,QAAAA,KAAK,EAAE;AAAT,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,OACgDH,MADhD,CAJF,CADF;AAUD;;AAED,SACE,MAAC,MAAD;AACE,IAAA,aAAa,EAAEC,aADjB;AAEE,IAAA,KAAK,EAAC,qCAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGC,WAAW,CAACE,GAAZ,CAAgB,UAACC,UAAD,EAAgB;AAC9B,WAAQ,MAAC,cAAD;AAAgB,MAAA,UAAU,EAAEA,UAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AACF,GAFA,CAJH,CADF;AAUD,CAxBD;;KAAMN,S;AA0BN,eAAeA,SAAf","sourcesContent":["import Layout from \"../components/Layout\";\nimport { initializeApollo, addApolloState } from \"../lib/apolloClient\";\nimport { GetStaticProps } from \"next\";\nimport { MENU_QUERY, MenuListItem } from \"../components/Navbar\";\nimport { gql } from \"@apollo/client\";\nimport TeamMemberCard from \"../components/TeamMemberCard\"\nexport const TEAM_MEMBERS_QUERY = gql`\n  query teamMembersQuery(\n    $first: Int\n    $last: Int\n    $after: String\n    $before: String\n  ) {\n    teamMembers(first: $first, last: $last, after: $after, before: $before) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          teamMember {\n            description\n            name\n            image {\n              sourceUrl\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport type TeamMember = {\n  name: string;\n  description: string;\n  image: {\n    sourceUrl: string;\n  };\n};\n\ntype Props = {\n  errors?: string;\n  menuListItems: MenuListItem[];\n  teamMembers: TeamMember[];\n};\n\nconst AboutPage = ({ errors, menuListItems, teamMembers }: Props) => {\n  if (errors) {\n    return (\n      <Layout\n        menuListItems={menuListItems}\n        title=\"Error | Next.js + TypeScript Example\"\n      >\n        <p>\n          <span style={{ color: \"red\" }}>Error:</span> {errors}\n        </p>\n      </Layout>\n    );\n  }\n\n  return (\n    <Layout\n      menuListItems={menuListItems}\n      title=\"Home | Next.js + TypeScript Example\"\n    >\n      {teamMembers.map((teamMember) => {\n         return (<TeamMemberCard teamMember={teamMember}/>);\n      })}\n    </Layout>\n  );\n};\n\nexport default AboutPage;\n\nexport const getStaticProps: GetStaticProps = async () => {\n  try {\n    const apolloClient = initializeApollo();\n    let teamMembers = [];\n    let hasNextPage;\n    let nextCursor = null;\n    do {\n      const { data }: any = await apolloClient.query({\n        query: TEAM_MEMBERS_QUERY,\n        variables: {\n          first: 10,\n          last: null,\n          after: nextCursor,\n          before: null,\n        },\n        context: { clientName: \"wordPress\" },\n      });\n\n\n        teamMembers.push(\n          ...data.teamMembers.edges.map(\n            ( edge: {node: {teamMember: TeamMember}}) => edge.node.teamMember\n          )\n        );\n      hasNextPage = data.teamMembers.pageInfo.hasNextPage;\n      nextCursor = data.teamMembers.pageInfo.endCursor;\n    } while (hasNextPage);\n    const menuListItems = await apolloClient\n      .query({\n        query: MENU_QUERY,\n        context: { clientName: \"wordPress\" },\n      })\n      .then((res) =>\n        res.data.menuItems.nodes.map(\n          (node: { label: string; url: string }) => ({\n            title: node.label,\n            pageURL: node.url,\n          })\n        )\n      );\n\n    return addApolloState(apolloClient, {\n      props: {\n        teamMembers,\n        menuListItems,\n      },\n    });\n  } catch (err) {\n    return { props: { errors: err.message } };\n  }\n};\n"]},"metadata":{},"sourceType":"module"}